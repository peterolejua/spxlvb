% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spxlvb.R
\name{spxlvb}
\alias{spxlvb}
\title{Parameter Exploded Variational Bayes for Well-Calibrated High-Dimensional Linear Regression with Spike-and-Slab Priors}
\usage{
spxlvb(
  X,
  Y,
  mu = NULL,
  omega = NULL,
  c_pi = NULL,
  d_pi = NULL,
  tau_e = NULL,
  update_order = NULL,
  mu_alpha = rep(1, ncol(X)),
  tau_alpha = 1000,
  tau_b = rep(400, ncol(X)),
  intercept = FALSE,
  max_iter = 1000,
  tol = 1e-05,
  seed = 12376
)
}
\arguments{
\item{X}{A numeric matrix. The design matrix (n observations Ã— p predictors).}

\item{Y}{A numeric vector. The response vector of length n.}

\item{mu}{Optional numeric vector. Initial variational means for regression coefficients.}

\item{omega}{Optional numeric vector. Initial spike probabilities.}

\item{c_pi}{Optional numeric. Prior Beta(a, b) parameter a for the spike probability.}

\item{d_pi}{Optional numeric. Prior Beta(a, b) parameter b for the spike probability.}

\item{tau_e}{Optional numeric. Known or estimated error precision.}

\item{update_order}{Optional integer vector. The coordinate update order (0-indexed for C++).}

\item{mu_alpha}{Prior mean for alpha. Default is mu_alpha_j = 1.}

\item{tau_alpha}{Prior precision for alpha. Default is 1000.}

\item{tau_b}{Slab prior precision. Default is a tau_b_j = 400.}

\item{intercept}{Logical. Whether to include an intercept. Default is FALSE.}

\item{max_iter}{Maximum number of iterations for the variational update. Default is 1000.}

\item{tol}{Convergence threshold for entropy and alpha change. Default is 1e-5.}

\item{seed}{Integer seed for cross-validation in glmnet. Default is 12376.}
}
\value{
A list with posterior summaries including estimated coefficients (\code{mu}),
inclusion probabilities (\code{omega}), intercept (if applicable), alpha path, convergence status, etc.
}
\description{
Fits a sparse linear regression model using variational inference with parameter explosion.
The model uses spike-and-slab priors.
}
\details{
This function acts as a wrapper for various C++ implementations of the SPXLVB algorithm.
It handles initial parameter setup and dynamically dispatches to the chosen C++ version.
}
\examples{
\dontrun{
# Example usage (assuming X and Y are defined)
# result <- spxlvb(X = my_X, Y = my_Y)
}
}
